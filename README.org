#+BEGIN_HTML
<a href="https://travis-ci.org/bozenne/LMMstar"><img src="https://travis-ci.org/bozenne/LMMstar.svg?branch=master"></a>
<a href="https://ci.appveyor.com/project/bozenne/LMMstar"><img src="https://ci.appveyor.com/api/projects/status/github/bozenne/LMMstar?svg=true" alt="Build status"></a>
<a href="http://www.gnu.org/licenses/gpl-3.0.html"><img src="https://img.shields.io/badge/License-GPLv3-blue.svg" alt="License"></a>
#+END_HTML

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
options(width = 100)
#+END_SRC

#+RESULTS:

* LMMstar

*LMMstar* is companion R package for the course "Statistical analysis
of correlated and repeated measurements for health science
researchers" taught by the section of Biostatistics of the University
of Copenhagen. It provides functions for computing summary statistics
and obtainign graphical displays of longitudinal data, as well as for
statistical modeling and statistical inference using mixed models.

This package does not implement any new methods. Instead it builds on
existing methods and softwares, e.g.: 
- =nlme= for fitting mixed model
The main feature of the package is to provide a convenient user
interface.

* Installation

To install the package, you will need:
- 1. :: A fairly recent R version (>=4.0.0). You can check that using:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
paste0(R.Version()[c("major","minor")], collapse = ".")
#+END_SRC

#+RESULTS:
: [1] "4.1.0"

- 2. :: Rtools (only for windows users!). To check whether Rtools is
        installed, you can first install the R package =pkgbuild=:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
install.packages("pkgbuild")
#+END_SRC
and then run:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
pkgbuild::find_rtools()
#+END_SRC

#+RESULTS:
: [1] TRUE
It should say =TRUE=. Otherwise go to
https://cran.r-project.org/bin/windows/Rtools/, download and run the
installer. Then try to run again =pkgbuild::find_rtools()=.

- 3. :: the library =devtools= that you can install using:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
install.packages("devtools")
#+END_SRC


The package can be installed/updated with the following line of code:
#+BEGIN_SRC R :exports both :eval never
devtools::install_github("bozenne/LMMstar")
#+END_SRC

Note: you can check that the package has been correctly installed by running
the following lines of code:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(LMMstar)
set.seed(10)
dW <- sampleRem(10, n.times = 3)
head(round(dW,3))
#+END_SRC

#+RESULTS:
:   id X1 X2 X3 X4 X5     X6     X7    X8    X9    X10     Y1     Y2     Y3
: 1  1  0  0  1  0  0 -0.456 -1.004 0.475 0.167 -1.263 -2.048  1.220  2.599
: 2  2  0  0  1  1  3 -0.830  4.104 0.343 1.024 -0.953  4.982  3.431  6.831
: 3  3  1  1  2  1  0  0.340  6.413 3.669 0.045  0.326  9.530 11.410 12.638
: 4  4  1  0  1  1  2  1.066  1.517 0.065 1.522 -1.172  6.212  7.113  7.936
: 5  5  1  0  2  1  1  1.216  2.359 1.942 0.444 -0.938  6.108  6.590  8.388
: 6  6  1  0  2  1  1  0.736 -2.707 2.465 2.753 -0.123  1.838  3.548  3.622

* Functionalities 

Load the package:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(LMMstar)
#+END_SRC

#+RESULTS:

** Data generation
Simulate some data in the wide format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
n.obs <- 100
n.times <- 4
mu <- rep(0,4)
gamma <- matrix(0, nrow = n.times, ncol = 10) ## add interaction
gamma[,6] <- c(0,1,1.5,1.5)
dW <- sampleRem(n.obs, n.times = n.times, mu = mu, gamma = gamma, format = "wide")
head(round(dW,3))
#+END_SRC

#+RESULTS:
:   id X1 X2 X3 X4 X5     X6     X7     X8    X9    X10     Y1     Y2     Y3     Y4
: 1  1  1  0  1  1  0 -0.367  1.534 -1.894 1.729  0.959  1.791  2.429  3.958  2.991
: 2  2  1  0  1  2  0 -0.410  2.065  1.766 0.761 -0.563  2.500  4.272  3.002  2.019
: 3  3  0  0  2  1  0 -1.720 -0.178  2.357 1.966  1.215 -3.208 -5.908 -4.277 -5.154
: 4  4  0  0  0  1  0  0.923 -2.089  0.233 1.307 -0.906 -2.062  0.397  1.757 -1.380
: 5  5  0  0  2  1  0  0.987  5.880  0.385 0.028  0.820  7.963  7.870  7.388  8.609
: 6  6  0  0  1  1  2 -1.075  0.479  2.202 0.900 -0.739  0.109 -1.602 -1.496 -1.841

Simulate some data in the long format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
dL <- sampleRem(n.obs, n.times = n.times, mu = mu, gamma = gamma, format = "long")
head(dL)
#+END_SRC

#+RESULTS:
:   id visit        Y X1 X2 X3 X4 X5         X6       X7        X8        X9        X10
: 1  1     1 1.791444  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 2  1     2 2.428570  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 3  1     3 3.958350  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 4  1     4 2.991198  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 5  2     1 2.500179  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173
: 6  2     2 4.272357  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173

** Descriptive tools

Descriptive statistics using the =procSummary= function:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summarize(Y1+Y2 ~ X1, data = dW)
#+END_SRC

#+RESULTS:
:   outcome X1 observed missing       mean       sd       min     median      max
: 1      Y1  0       45       0 -0.2802344 2.937848 -5.157106 -0.8118583 7.962627
: 2      Y1  1       55       0  2.2891059 3.485595 -4.799078  1.8432615 9.940564
: 3      Y2  0       45       0 -0.3731596 3.876024 -7.128541 -0.2983283 7.870462
: 4      Y2  1       55       0  1.9855766 3.556928 -6.342293  1.9737934 9.008193

** Modeling tools
Fit a linear mixed model with unstructured covariance matrix:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
e.lmm <- lmm(Y ~ visit * (X1 + X6), repetition = ~visit|id, structure = "UN", data = dL)
#+END_SRC

#+RESULTS:

Fit a linear mixed model with compound symmetry structure:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
e.lmm <- lmm(Y ~ visit * (X1 + X6), repetition = ~visit|id, structure = "CS", data = dL)
#+END_SRC

#+RESULTS:

** Summary function
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(e.lmm, ci = TRUE)
#+END_SRC

#+RESULTS:
#+begin_example
  Linear model with heterogeneous residual variance 
  - fitted using Restricted Maximum Likelihood (REML) 
  - log-likelihood :-760.6135 (parameters: mean = 12, variance = 4, correlation = 6)
 
Dataset: dL 
 - 100 clusters 
 - 400 observations 
 - 4 maximum number of observations per cluster 
 - levels of the categorical variables 
 - reference level: visit=1 
 
$visit
  2 3 4
1 0 0 0
2 1 0 0
3 0 1 0
4 0 0 1

Correlation structure: ~visit | id 
      1     2     3     4
1 1.000 0.897 0.886 0.894
2 0.897 1.000 0.888 0.890
3 0.886 0.888 1.000 0.905
4 0.894 0.890 0.905 1.000

Variance structure: ~visit 
Standard deviation estimates (relative to reference): 
             estimate         lower         upper
sigma:1         3.227         2.707         3.848
sigma:2 3.247 (1.006) 2.772 (0.921)   3.803 (1.1)
sigma:3 3.211 (0.995) 2.745 (0.906) 3.757 (1.092)
sigma:4 3.045 (0.944)   2.6 (0.862) 3.566 (1.033)

 Note: confidence intervals have been computed on the log-scale and then back-transformed.

Mean structure: Y ~ visit * (X1 + X6) 
            estimate    se     df  lower  upper p.value    
(Intercept)   -0.153 0.488 96.993 -1.121 -1.121   0.755    
visit2          0.23 0.222 96.971  -0.21  -0.21   0.301    
visit3         0.213 0.232  96.97 -0.248 -0.248   0.362    
visit4         0.347  0.22 96.971 -0.089 -0.089   0.118    
X1             2.486 0.651 96.993  1.194  1.194  <0.001 ***
X6             0.533 0.339 96.993  -0.14  -0.14   0.119    
visit2:X1     -0.422 0.296 96.971 -1.009 -1.009   0.157    
visit3:X1     -0.162  0.31  96.97 -0.777 -0.777   0.603    
visit4:X1     -0.002 0.293 96.971 -0.583 -0.583   0.995    
visit2:X6      1.352 0.154 96.971  1.046  1.046  <0.001 ***
visit3:X6       1.79 0.161  96.97   1.47   1.47  <0.001 ***
visit4:X6      1.746 0.153 96.971  1.443  1.443  <0.001 ***

The columns lower and upper correspond to the 95% confidence interval of the estimated coefficient
Note: p-values and confidence intervals are not adjusted for multiple comparisons
#+end_example

** Extract model coefficients

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
coef(e.lmm)
#+END_SRC

#+RESULTS:
:     (Intercept)          visit2          visit3          visit4              X1              X6 
:    -0.152826143     0.230448277     0.212832899     0.346556903     2.486047371     0.532725132 
:       visit2:X1       visit3:X1       visit4:X1       visit2:X6       visit3:X6       visit4:X6 
:    -0.422009124    -0.161725891    -0.001693021     1.352103825     1.790279061     1.745689237 
:      log(sigma)        log(k).2        log(k).3        log(k).4 atanh(cor(2,1)) atanh(cor(3,1)) 
:     1.171565680     0.006131638    -0.004955709    -0.058003779     1.458393073     1.403872085 
: atanh(cor(4,1)) atanh(cor(3,2)) atanh(cor(4,2)) atanh(cor(4,3)) 
:     1.443143583     1.414290758     1.420587549     1.500254837

or only coefficients relative to the mean:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
coef(e.lmm, effects = "mean")
#+END_SRC

#+RESULTS:
:  (Intercept)       visit2       visit3       visit4           X1           X6    visit2:X1 
: -0.152826143  0.230448277  0.212832899  0.346556903  2.486047371  0.532725132 -0.422009124 
:    visit3:X1    visit4:X1    visit2:X6    visit3:X6    visit4:X6 
: -0.161725891 -0.001693021  1.352103825  1.790279061  1.745689237

** Extract confidence intervals and p-values
#+begin_src R :exports both :results output :session *R* :cache no
confint(e.lmm)
#+end_src

#+RESULTS:
#+begin_example
                estimate         se     statistic        df       lower     upper null      p.value
(Intercept) -0.152826143 0.48784938  -0.313265014  96.99285 -1.12107302 0.8154207    0 7.547520e-01
visit2       0.230448277 0.22175453   1.039204355  96.97092 -0.20967475 0.6705713    0 3.012940e-01
visit3       0.212832899 0.23219154   0.916626411  96.97009 -0.24800483 0.6736706    0 3.616125e-01
visit4       0.346556903 0.21959091   1.578193321  96.97134 -0.08927189 0.7823857    0 1.177779e-01
X1           2.486047371 0.65082357   3.819848382  96.99285  1.19434153 3.7777532    0 2.355788e-04
X6           0.532725132 0.33915425   1.570745874  96.99285 -0.14040279 1.2058531    0 1.194983e-01
visit2:X1   -0.422009124 0.29583532  -1.426500136  96.97092 -1.00916257 0.1651443    0 1.569357e-01
visit3:X1   -0.161725891 0.30975898  -0.522102344  96.97009 -0.77651412 0.4530623    0 6.027897e-01
visit4:X1   -0.001693021 0.29294890  -0.005779237  96.97134 -0.58311766 0.5797316    0 9.954007e-01
visit2:X6    1.352103825 0.15416437   8.770533967  96.97092  1.04612907 1.6580786    0 6.039613e-14
visit3:X6    1.790279061 0.16142020  11.090799102  96.97009  1.46990339 2.1106547    0 0.000000e+00
visit4:X6    1.745689237 0.15266021  11.435129362  96.97134  1.44269985 2.0486786    0 0.000000e+00
sigma        3.227041199 0.07179588            NA  40.70359  2.79138779 3.7306873   NA           NA
k.2          1.006150475 0.04481137 -22.178930910 106.41272  0.92062058 1.0996265    1 0.000000e+00
k.3          0.995056550 0.04704423 -21.361931607 106.96721  0.90645332 1.0923205    1 0.000000e+00
k.4          0.943646381 0.04542779 -23.289790733 106.47284  0.86237577 1.0325760    1 0.000000e+00
cor(2,1)     0.897340051 0.10153374  14.363629905  16.74186  0.84657095 0.9319291    0 7.666667e-11
cor(3,1)     0.886185745 0.10153461  13.826537219  16.96900  0.83046190 0.9243512    0 1.148324e-10
cor(4,1)     0.894328769 0.10153507  14.213252735  16.78598  0.84220621 0.9298894    0 8.696843e-11
cor(3,2)     0.888401831 0.10153448  13.929167068  16.92897  0.83365560 0.9258588    0 1.057128e-10
cor(4,2)     0.889721431 0.10153450  13.991180974  16.88618  0.83555362 0.9267586    0 1.021896e-10
cor(4,3)     0.905194294 0.10153430  14.775842444  16.55410  0.85796870 0.9372477    0 5.826117e-11

 Note: confidence intervals and p-values for the "sigma", "k", "rho" coefficients have been computed after transformation and then back-transformed.
       The transformation used in the attribute "backtransform" of the object.
#+end_example


** F-tests

#+begin_src R :exports both :results output :session *R* :cache no
anova(e.lmm)
#+end_src

#+RESULTS:
#+begin_example
F-test for the mean coefficients 
          statistic df.num df.denom      p.value
visit     0.8680664      3 96.96942 0.4604760932
X1       14.5912417      1 96.99285 0.0002355788
X6        2.4672426      1 96.99285 0.1194983223
visit:X1  0.8868844      3 96.96942 0.4508229435
visit:X6 55.2925716      3 96.96942 0.0000000000

F-test for the variance coefficients 
      statistic df.num df.denom   p.value
visit 0.8677722      3 106.1584 0.4603102
#+end_example

** Graphical display (via the emmeans package)

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(emmeans)
emmip(e.lmm, X1~visit, mode = "df.error")
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
ggsave(emmip(e.lmm, X1~visit, mode = "df.error"), filename = "~/Documents/GitHub/LMMstar/inst/figures/gg-emmeans.png")
#+END_SRC

#+RESULTS:
: Saving 7 x 7 in image

#+html: <p align="center"><img src="inst/figures/gg-ufit.png" /></p>

* Configuration 

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
sessionInfo()
#+END_SRC

#+RESULTS:
#+begin_example
R version 4.1.0 (2021-05-18)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 20.04.2 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8       
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] LMMstar_0.2    reshape2_1.4.4 nlme_3.1-152   ggplot2_3.3.3 

loaded via a namespace (and not attached):
 [1] tidyselect_1.1.1    remotes_2.3.0       purrr_0.3.4         pbapply_1.4-3      
 [5] splines_4.1.0       lattice_0.20-44     colorspace_2.0-1    vctrs_0.3.8        
 [9] generics_0.1.0      testthat_3.0.2      usethis_2.0.1       utf8_1.2.1         
[13] survival_3.2-11     rlang_0.4.11        pkgbuild_1.2.0      pillar_1.6.1       
[17] glue_1.4.2          withr_2.4.2         sessioninfo_1.1.1   foreach_1.5.1      
[21] lifecycle_1.0.0     plyr_1.8.6          lava_1.6.9          stringr_1.4.0      
[25] munsell_0.5.0       gtable_0.3.0        devtools_2.4.1      codetools_0.2-18   
[29] memoise_2.0.0       callr_3.7.0         fastmap_1.1.0       ps_1.6.0           
[33] parallel_4.1.0      fansi_0.4.2         Rcpp_1.0.6          scales_1.1.1       
[37] cachem_1.0.5        desc_1.3.0          pkgload_1.2.1       fs_1.5.0           
[41] stringi_1.6.2       processx_3.5.2      dplyr_1.0.6         butils_1.4.7       
[45] numDeriv_2016.8-1.1 grid_4.1.0          rprojroot_2.0.2     cli_2.5.0          
[49] tools_4.1.0         magrittr_2.0.1      tibble_3.1.2        crayon_1.4.1       
[53] pkgconfig_2.0.3     MASS_7.3-54         ellipsis_0.3.2      Matrix_1.3-3       
[57] data.table_1.14.0   prettyunits_1.1.1   iterators_1.0.13    boot_1.3-28        
[61] R6_2.5.0            butils.base_1.2     compiler_4.1.0
#+end_example

