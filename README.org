#+BEGIN_HTML
<a href="https://travis-ci.org/bozenne/repeated"><img src="https://travis-ci.org/bozenne/repeated.svg?branch=master"></a>
<a href="https://ci.appveyor.com/project/bozenne/repeated"><img src="https://ci.appveyor.com/api/projects/status/github/bozenne/repeated?svg=true" alt="Build status"></a>
<a href="http://www.gnu.org/licenses/gpl-3.0.html"><img src="https://img.shields.io/badge/License-GPLv3-blue.svg" alt="License"></a>
#+END_HTML

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
options(width = 100)
#+END_SRC

#+RESULTS:

* repeated

*repeated* is companion R package for the course "Statistical analysis
of correlated and repeated measurements for health science
researchers" taught by the section of Biostatistics of the University
of Copenhagen. It provides functions for computing summary statistics
and obtainign graphical displays of longitudinal data, as well as for
statistical modeling and statistical inference using mixed models.

This package does not implement any new methods. Instead it builds on
existing methods and softwares, e.g.: 
- =nlme= for fitting mixed model
The main feature of the package is to provide a convenient user
interface.

* Installation

To install the package:

1. [@1] make sure that the R version that you use is recent
   (>=4.0.0). You can check that using:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
paste0(R.Version()[c("major","minor")], collapse = ".")
#+END_SRC

#+RESULTS:
: [1] "4.0.2"

2. [@2] Make sure that Rtools is installed (only for windows
   users!). To check that you can first install the R package
   =pkgbuild=:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
install.packages("pkgbuild")
#+END_SRC
and then run:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
pkgbuild::find_rtools()
#+END_SRC

#+RESULTS:
: [1] TRUE
It should say =TRUE=. Otherwise go to
https://cran.r-project.org/bin/windows/Rtools/, download and run the
installer. Then try to run again =pkgbuild::find_rtools()=.

3. Install the library =devtools=:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
install.packages("devtools")
#+END_SRC
and install the =repeated= package using the following R code:
#+BEGIN_SRC R :exports both :eval never
devtools::install_github("bozenne/repeated")
#+END_SRC

4. Check that the package is working by loading it and running:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(repeated)
set.seed(10)
dW <- sampleRem(10, n.times = 3)
head(dW)
#+END_SRC

#+RESULTS:
:   id X1 X2 X3 X4 X5         X6        X7         X8         X9        X10        Y1        Y2        Y3
: 1  1  0  0  1  0  0 -0.4561763 -1.003670 0.47491024 0.16724130 -1.2634314 -2.047777  1.219887  2.598824
: 2  2  0  0  1  1  3 -0.8303227  4.103862 0.34267493 1.02404076 -0.9530086  4.982213  3.431236  6.831173
: 3  3  1  1  2  1  0  0.3401156  6.413301 3.66894781 0.04507282  0.3261453  9.530254 11.410254 12.637631
: 4  4  1  0  1  1  2  1.0663764  1.517458 0.06469603 1.52246242 -1.1718628  6.211695  7.112620  7.935585
: 5  5  1  0  2  1  1  1.2161258  2.359027 1.94236933 0.44388370 -0.9379801  6.107894  6.589544  8.388333
: 6  6  1  0  2  1  1  0.7356907 -2.706636 2.46505031 2.75276387 -0.1233118  1.838225  3.547717  3.621731
The code should run without error.

* Functionalities 

Load the package:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(repeated)
#+END_SRC

#+RESULTS:
: repeated version 0.1.6

** Data generation
Simulate some data in the wide format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
n.obs <- 2e2
n.times <- 4
mu <- rep(0,4)
gamma <- matrix(0, nrow = n.times, ncol = 10) ## add interaction
gamma[,6] <- c(0,1,1.5,1.5)
dW <- sampleRem(n.obs, n.times = n.times, mu = mu, gamma = gamma, format = "wide")
head(dW)
#+END_SRC

#+RESULTS:
:   id X1 X2 X3 X4 X5          X6         X7         X8         X9        X10         Y1         Y2         Y3         Y4
: 1  1  0  1  1  1  1 -0.72176278  0.6764573  2.9981272 0.44539376 -1.3437766  0.9472208  0.2599741  0.5129387  0.2271818
: 2  2  1  0  0  3  2  0.50290773  1.6344982 -1.8952366 0.06364757 -0.4490553  3.3818255  4.9854603  3.5199764  3.1350264
: 3  3  0  0  2  2  0 -1.37416464  3.5287522  2.8414745 0.82845357 -1.4472231 -1.0618197 -1.6150170 -0.3434339 -1.7783007
: 4  4  1  0  2  0  1  0.03680003 -0.9407257  4.3469525 0.11419481 -1.0683588 -2.4557376  1.9963617 -0.1105485 -0.8434173
: 5  5  0  0  1  1  0  0.58620091  1.5161301 -0.8924631 0.29580861  1.2474602  2.2220049  2.3856858  4.8439699  3.5542949
: 6  6  1  0  2  1  0  0.68394351  4.6191039  1.2664976 0.05598329 -0.6581442  7.2223930  7.6470176  9.6872073  6.3529380

Simulate some data in the long format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
dL <- sampleRem(n.obs, n.times = n.times, mu = mu, gamma = gamma, format = "long")
head(dL)
#+END_SRC

#+RESULTS:
:   id visit         Y X1 X2 X3 X4 X5         X6        X7        X8         X9        X10
: 1  1     1 0.9472208  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766
: 2  1     2 0.2599741  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766
: 3  1     3 0.5129387  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766
: 4  1     4 0.2271818  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766
: 5  2     1 3.3818255  1  0  0  3  2  0.5029077 1.6344982 -1.895237 0.06364757 -0.4490553
: 6  2     2 4.9854603  1  0  0  3  2  0.5029077 1.6344982 -1.895237 0.06364757 -0.4490553

** Descriptive tools

Descriptive statistics using the =procSummary= function:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summarize(Y1+Y2 ~ X1, data = dW)
#+END_SRC

#+RESULTS:
:   outcome X1 observed missing       mean       sd       min     median       max
: 1      Y1  0       83       0 -0.2194734 3.170074 -6.764630 -0.2698166  7.568710
: 2      Y1  1      117       0  1.9148989 3.537815 -7.120310  2.3023075 10.725209
: 3      Y2  0       83       0 -0.3327662 3.527099 -7.521067 -0.9078663  9.006768
: 4      Y2  1      117       0  1.9764969 3.909608 -8.163804  1.9963617 12.686033

** Modeling tools
Fit a linear mixed model with unstructured covariance matrix:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
e.lmm <- lmm(Y ~ visit * (X1 + X6), covariance = ~visit|id, data = dL)
#+END_SRC

#+RESULTS:

Code used to fit the model
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
cat(attr(e.lmm,"code"))
#+END_SRC

#+RESULTS:
: nlme::gls(model=Y~visit*(X1+X6),
:     data=data,
:     correlation=nlme::corSymm(form=~visit.index|id),
:     weights=nlme::varIdent(form=~1|visit))

Data used to fit the model
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
head(attr(e.lmm,"data"))
#+END_SRC

#+RESULTS:
:   id visit         Y X1 X2 X3 X4 X5         X6        X7        X8         X9        X10 visit.index
: 1  1     1 0.9472208  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766           1
: 2  1     2 0.2599741  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766           2
: 3  1     3 0.5129387  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766           3
: 4  1     4 0.2271818  0  1  1  1  1 -0.7217628 0.6764573  2.998127 0.44539376 -1.3437766           4
: 5  2     1 3.3818255  1  0  0  3  2  0.5029077 1.6344982 -1.895237 0.06364757 -0.4490553           1
: 6  2     2 4.9854603  1  0  0  3  2  0.5029077 1.6344982 -1.895237 0.06364757 -0.4490553           2

** Summary function
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(e.lmm)
#+END_SRC

#+RESULTS:
#+begin_example
  Linear mixed effect model with an unstructured covariance matrix 
  - fitted using Restricted Maximum Likelihood (REML) 
  - likelihood :-1517.619 (df = 12)
 
Dataset: data 
 - 200 clusters 
 - 800 observations 
 - 4 maximum number of observations per cluster 
 - levels of the categorical variables 
$visit
  2 3 4
1 0 0 0
2 1 0 0
3 0 1 0
4 0 0 1

 - reference level: visit=1 
 
Correlation structure: nlme::corSymm(form = ~visit.index | id) 
      1     2     3     4
1 1.000 0.910 0.904 0.912
2 0.910 1.000 0.901 0.906
3 0.904 0.901 1.000 0.901
4 0.912 0.906 0.901 1.000

Variance structure: nlme::varIdent(form = ~1 | visit) 
                     1      2      3     4
variance          11.1 11.126 10.196 10.91
relative variance  1.0  0.999  0.916  0.98

Mean structure: Y ~ visit * (X1 + X6) 
            estimate  lower  upper    se p-value    
(Intercept)   -0.235 -0.954 -0.954 0.366  0.5217    
visit2         -0.14 -0.445 -0.445 0.156  0.3701    
visit3         -0.09   -0.4   -0.4 0.158  0.5701    
visit4        -0.026 -0.327 -0.327 0.153  0.8658    
X1             2.149  1.209  1.209 0.479  <0.001 ***
X6             0.635  0.176  0.176 0.234  0.0068  **
visit2:X1      0.199   -0.2   -0.2 0.203  0.3270    
visit3:X1      0.045 -0.361 -0.361 0.207  0.8270    
visit4:X1      0.213  -0.18  -0.18   0.2  0.2887    
visit2:X6      1.085   0.89   0.89 0.099  <0.001 ***
visit3:X6      1.497  1.298  1.298 0.101  <0.001 ***
visit4:X6      1.493  1.301  1.301 0.098  <0.001 ***

The columns lower and upper correspond to the 95% confidence interval of the estimated coefficient
Note: p-value(s) and confidence interval(s) are not adjusted for multiple comparisons
#+end_example


Summary based on the =nlme= package
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
nlme:::summary.gls(e.lmm)
#+END_SRC

#+RESULTS:
#+begin_example
Generalized least squares fit by REML
  Model: Y ~ visit * (X1 + X6) 
  Data: data 
       AIC      BIC    logLik
  3079.239 3181.968 -1517.619

Correlation Structure: General
 Formula: ~visit.index | id 
 Parameter estimate(s):
 Correlation: 
  1     2     3    
2 0.910            
3 0.904 0.901      
4 0.912 0.906 0.901
Variance function:
 Structure: Different standard deviations per stratum
 Formula: ~1 | visit 
 Parameter estimates:
        1         2         3         4 
1.0000000 0.9995212 0.9568404 0.9897593 

Coefficients:
                 Value Std.Error   t-value p-value
(Intercept) -0.2348317 0.3663433 -0.641015  0.5217
visit2      -0.1395219 0.1555887 -0.896735  0.3701
visit3      -0.0898541 0.1581675 -0.568095  0.5701
visit4      -0.0258888 0.1531758 -0.169014  0.8658
X1           2.1487775 0.4789445  4.486485  0.0000
X6           0.6353559 0.2341198  2.713807  0.0068
visit2:X1    0.1994922 0.2034112  0.980733  0.3270
visit3:X1    0.0452032 0.2067827  0.218602  0.8270
visit4:X1    0.2126218 0.2002567  1.061746  0.2887
visit2:X6    1.0850683 0.0994324 10.912625  0.0000
visit3:X6    1.4965879 0.1010804 14.805910  0.0000
visit4:X6    1.4933931 0.0978904 15.255771  0.0000

 Correlation: 
          (Intr) visit2 visit3 visit4 X1     X6     vs2:X1 vs3:X1 vs4:X1 vs2:X6 vs3:X6
visit2    -0.213                                                                      
visit3    -0.314  0.480                                                               
visit4    -0.233  0.474  0.477                                                        
X1        -0.765  0.163  0.240  0.179                                                 
X6        -0.015  0.003  0.005  0.004  0.011                                          
visit2:X1  0.163 -0.765 -0.367 -0.363 -0.213 -0.002                                   
visit3:X1  0.240 -0.367 -0.765 -0.365 -0.314 -0.003  0.480                            
visit4:X1  0.179 -0.363 -0.365 -0.765 -0.233 -0.003  0.474  0.477                     
visit2:X6  0.003 -0.015 -0.007 -0.007 -0.002 -0.213  0.011  0.005  0.005              
visit3:X6  0.005 -0.007 -0.015 -0.007 -0.003 -0.314  0.005  0.011  0.005  0.480       
visit4:X6  0.004 -0.007 -0.007 -0.015 -0.003 -0.233  0.005  0.005  0.011  0.474  0.477

Standardized residuals:
         Min           Q1          Med           Q3          Max 
-3.424885913 -0.704085800 -0.004493345  0.698214920  2.839159577 

Residual standard error: 3.337148 
Degrees of freedom: 800 total; 788 residual
#+end_example

** Extract model coefficients

Only coefficients related to the mean:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
getCoef(e.lmm)
#+END_SRC

#+RESULTS:
#+begin_example
               estimate  std.error    t.value      p.value      lower     upper
(Intercept) -0.23483166 0.36634334 -0.6410152 5.216992e-01 -0.9539560 0.4842926
visit2      -0.13952188 0.15558870 -0.8967353 3.701340e-01 -0.4449392 0.1658955
visit3      -0.08985413 0.15816754 -0.5680946 5.701326e-01 -0.4003337 0.2206254
visit4      -0.02588880 0.15317582 -0.1690136 8.658293e-01 -0.3265697 0.2747921
X1           2.14877752 0.47894453  4.4864852 8.318704e-06  1.2086195 3.0889356
X6           0.63535588 0.23411977  2.7138070 6.796794e-03  0.1757837 1.0949281
visit2:X1    0.19949219 0.20341125  0.9807333 3.270253e-01 -0.1997998 0.5987842
visit3:X1    0.04520321 0.20678273  0.2186024 8.270164e-01 -0.3607070 0.4511134
visit4:X1    0.21262181 0.20025673  1.0617462 2.886762e-01 -0.1804779 0.6057216
visit2:X6    1.08506829 0.09943238 10.9126250 6.439027e-26  0.8898846 1.2802520
visit3:X6    1.49658795 0.10108045 14.8059097 6.080035e-44  1.2981692 1.6950067
visit4:X6    1.49339309 0.09789037 15.2557706 3.102650e-46  1.3012363 1.6855498
#+end_example

or only variance-covariance coefficients:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
getCoef(e.lmm, effects = c("variance"), add.type = TRUE)
#+END_SRC

#+RESULTS:
#+begin_example
                  type     term  estimate     lower     upper
1          correlation cor(1,2) 0.9097688 0.8824279 0.9309847
2          correlation cor(1,3) 0.9035667 0.8744735 0.9261826
3          correlation cor(1,4) 0.9117360 0.8849552 0.9325058
4          correlation cor(2,3) 0.9012888 0.8715746 0.9244055
5          correlation cor(2,4) 0.9056975 0.8772191 0.9278244
6          correlation cor(3,4) 0.9007434 0.8708749 0.9239837
7  factor.std.residual        2 0.9995212 0.9431565 1.0592543
8  factor.std.residual        3 0.9568404 0.9015721 1.0154968
9  factor.std.residual        4 0.9897593 0.9349787 1.0477495
10        std.residual    sigma 3.3371484 3.0232083 3.6836891
#+end_example

** Graphical display


#+BEGIN_SRC R :exports both :results output :session *R* :cache no
e.ufit <- ufit(e.lmm, value = c("X6" = 1.25))
e.ufit[,c("visit","X1","X6","fit","lower","upper")]
#+END_SRC

#+RESULTS:
:   visit X1   X6       fit      lower    upper
: 1     1  0 1.25 0.5593632 -0.3526814 1.471408
: 2     2  0 1.25 1.7761767  0.8645688 2.687785
: 3     3  0 1.25 2.3402440  1.4675629 3.212925
: 4     4  0 1.25 2.4002157  1.4975112 3.302920
: 5     1  1 1.25 2.7081407  1.8751613 3.541120
: 6     2  1 1.25 4.1244464  3.2918658 4.957027
: 7     3  1 1.25 4.5342247  3.7371964 5.331253
: 8     4  1 1.25 4.7616151  3.9371660 5.586064

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(ggplot2)
gg <- autoplot(e.ufit) + theme(legend.position = "bottom",
                               text = element_text(size=20))
gg
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
ggsave(gg, filename = "c:/Users/hpl802/Documents/GitHub/repeated/inst/figures/gg-ufit.png")
#+END_SRC

#+RESULTS:
: Saving 7 x 7 in image

#+html: <p align="center"><img src="inst/figures/gg-ufit.png" /></p>

* Configuration 

#+BEGIN_SRC R :exports both :results output :session *R* :cache no
sessionInfo()
#+END_SRC

#+RESULTS:
#+begin_example
R version 4.0.2 (2020-06-22)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 7 x64 (build 7601) Service Pack 1

Matrix products: default

locale:
[1] LC_COLLATE=Danish_Denmark.1252  LC_CTYPE=Danish_Denmark.1252    LC_MONETARY=Danish_Denmark.1252
[4] LC_NUMERIC=C                    LC_TIME=Danish_Denmark.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] broom_0.7.0    repeated_0.1.0

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.5       magrittr_1.5     splines_4.0.2    tidyselect_1.1.0 lattice_0.20-41  R6_2.4.1         rlang_0.4.7     
 [8] stringr_1.4.0    plyr_1.8.6       dplyr_1.0.2      tools_4.0.2      grid_4.0.2       nlme_3.1-148     ellipsis_0.3.1  
[15] survival_3.1-12  tibble_3.0.3     lifecycle_0.2.0  crayon_1.3.4     Matrix_1.2-18    lava_1.6.7       purrr_0.3.4     
[22] reshape2_1.4.4   tidyr_1.1.2      vctrs_0.3.4      glue_1.4.2       stringi_1.5.3    compiler_4.0.2   pillar_1.4.6    
[29] generics_0.0.2   backports_1.1.10 pkgconfig_2.0.3
#+end_example
