#+BEGIN_HTML
<a href="https://travis-ci.org/bozenne/repeated"><img src="https://travis-ci.org/bozenne/repeated.svg?branch=master"></a>
<a href="https://ci.appveyor.com/project/bozenne/repeated"><img src="https://ci.appveyor.com/api/projects/status/github/bozenne/repeated?svg=true" alt="Build status"></a>
<a href="http://www.gnu.org/licenses/gpl-3.0.html"><img src="https://img.shields.io/badge/License-GPLv3-blue.svg" alt="License"></a>
#+END_HTML

* repeated

*repeated* is companion R package for the course "Statistical analysis
of correlated and repeated measurements for health science
researchers" taught by the section of Biostatistics of the University
of Copenhagen. It provides functions for computing summary statistics
and obtainign graphical displays of longitudinal data, as well as for
statistical modeling and statistical inference using mixed models.

This package does not implement any new methods. Instead it builds on
existing methods and softwares, e.g.: 
- =nlme= for fitting mixed model
The main feature of the package is to provide a convenient user
interface.

* Installation

The easiest way to install this R package is to first install the
library =devtools=:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
install.packages("devtools")
#+END_SRC
and then run the following R code:
#+BEGIN_SRC R :exports both :eval never
devtools::install_github("bozenne/repeated")
#+END_SRC

* Functionalities 

Load the package:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
library(repeated)
#+END_SRC

#+RESULTS:
: repeated version 0.1.0

** Data generation
Simulate some data in the wide format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
dW <- sampleRem(1e2, n.times = 3, format = "wide")
head(dW)
#+END_SRC

#+RESULTS:
:   Id X1 X2 X3 X4 X5         X6         X7         X8         X9        X10         Y1         Y2         Y3
: 1  1  1  0  1  1  0 -0.3665251  1.5338155 -1.8944253 1.72886647  0.9592499  0.7914440  1.7950955  3.5081372
: 2  2  1  0  1  2  0 -0.4097541  2.0654127  1.7658413 0.76133482 -0.5630173  1.5001792  3.6821108  2.6168191
: 3  3  0  0  2  1  0 -1.7198620 -0.1781015  2.3570828 1.96628919  1.2152654 -3.2076907 -4.1885439 -1.6972793
: 4  4  0  0  0  1  0  0.9225563 -2.0885963  0.2334654 1.30674682 -0.9063326 -2.0621330 -0.5258805  0.3733653
: 5  5  0  0  2  1  0  0.9870991  5.8799954  0.3848497 0.02778831  0.8199623  7.9626275  6.8833634  5.9071405
: 6  6  0  0  1  1  2 -1.0754115  0.4788953  2.2020069 0.89987424 -0.7390384  0.1092696 -0.5264119  0.1166843

Simulate some data in the long format:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
set.seed(10) ## ensure reproductibility
dL <- sampleRem(1e2, n.times = 3, format = "long")
head(dL)
#+END_SRC

#+RESULTS:
:   Id visit        Y X1 X2 X3 X4 X5         X6       X7        X8        X9        X10
: 1  1     1 0.791444  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 2  1     2 1.795096  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 3  1     3 3.508137  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499
: 4  2     1 1.500179  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173
: 5  2     2 3.682111  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173
: 6  2     3 2.616819  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173

** Descriptive tools

Descriptive statistics using the =procSummary= function:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
procSummary(Y1+Y2 ~ X1, data = dW)
#+END_SRC

#+RESULTS:
:   outcome X1 observed missing       mean       sd       min     median      max
: 1      Y1  0       45       0 -0.2802344 2.937848 -5.157106 -0.8118583 7.962627
: 2      Y1  1       55       0  1.2891059 3.485595 -5.799078  0.8432615 8.940564
: 3      Y2  0       45       0 -0.1339964 3.299294 -5.935869 -0.5097901 6.883363
: 4      Y2  1       55       0  1.0683872 3.373441 -5.383865  1.2901854 7.593107

** Modeling tools
Fit a linear mixed model with unstructured covariance matrix:
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
e.lmm <- lmm(Y ~ visit + X1 + X6, covariance = ~visit|Id, data = dL)
summary(e.lmm)
#+END_SRC

#+RESULTS:
#+begin_example
  Linear mixed effect model with an unstructured covariance matrix 
  - fitted using Restricted Maximum Likelihood (REML) 
  - likelihood :-608.1519 (df = 5)
 
Dataset: data 
 - 100 clusters 
 - 300 observations 
 - 3 maximum number of observations per cluster 
 - levels of the categorical variables 
$visit
  2 3
1 0 0
2 1 0
3 0 1

 - reference level: visit=1 
 
Correlation structure: nlme::corSymm(form = ~visit.index | Id) 
      1     2     3
1 1.000 0.893 0.885
2 0.893 1.000 0.890
3 0.885 0.890 1.000

Variance structure: nlme::varIdent(form = ~1 | visit) 
                     1     2      3
variance          10.4 10.56 10.304
relative variance  1.0  1.01  0.987

Mean structure: Y ~ visit + X1 + X6 
            estimate  lower  upper    se p-value  
(Intercept)   -0.023 -0.964 -0.964 0.478  0.9617  
visit2        -0.056 -0.351 -0.351  0.15  0.7115  
visit3         0.079 -0.225 -0.225 0.155  0.6080  
X1             1.308  0.075  0.075 0.627  0.0376 *
X6             0.743    0.1    0.1 0.327  0.0237 *

The columns lower and upper correspond to the 95% confidence interval of the estimated coefficient
Note: p-value(s) and confidence interval(s) are not adjusted for multiple comparisons
#+end_example

Code used to fit the model
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
cat(attr(e.lmm,"code"))
#+END_SRC

#+RESULTS:
: nlme::gls(model=Y~visit+X1+X6,
:     data=data,
:     correlation=nlme::corSymm(form=~visit.index|Id),
:     weights=nlme::varIdent(form=~1|visit))

Data used to fit the model
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
head(attr(e.lmm,"data"))
#+END_SRC

#+RESULTS:
:   Id visit        Y X1 X2 X3 X4 X5         X6       X7        X8        X9        X10 visit.index
: 1  1     1 0.791444  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499           1
: 2  1     2 1.795096  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499           2
: 3  1     3 3.508137  1  0  1  1  0 -0.3665251 1.533815 -1.894425 1.7288665  0.9592499           3
: 4  2     1 1.500179  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173           1
: 5  2     2 3.682111  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173           2
: 6  2     3 2.616819  1  0  1  2  0 -0.4097541 2.065413  1.765841 0.7613348 -0.5630173           3

Summary based on the =nlme= package
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
summary(e.lmm)
#+END_SRC

#+RESULTS:
#+begin_example
  Linear mixed effect model with an unstructured covariance matrix 
  - fitted using Restricted Maximum Likelihood (REML) 
  - likelihood :-608.1519 (df = 5)
 
Dataset: data 
 - 100 clusters 
 - 300 observations 
 - 3 maximum number of observations per cluster 
 - levels of the categorical variables 
$visit
  2 3
1 0 0
2 1 0
3 0 1

 - reference level: visit=1 
 
Correlation structure: nlme::corSymm(form = ~visit.index | Id) 
      1     2     3
1 1.000 0.893 0.885
2 0.893 1.000 0.890
3 0.885 0.890 1.000

Variance structure: nlme::varIdent(form = ~1 | visit) 
                     1     2      3
variance          10.4 10.56 10.304
relative variance  1.0  1.01  0.987

Mean structure: Y ~ visit + X1 + X6 
            estimate  lower  upper    se p-value  
(Intercept)   -0.023 -0.964 -0.964 0.478  0.9617  
visit2        -0.056 -0.351 -0.351  0.15  0.7115  
visit3         0.079 -0.225 -0.225 0.155  0.6080  
X1             1.308  0.075  0.075 0.627  0.0376 *
X6             0.743    0.1    0.1 0.327  0.0237 *

The columns lower and upper correspond to the 95% confidence interval of the estimated coefficient
Note: p-value(s) and confidence interval(s) are not adjusted for multiple comparisons
#+end_example

