% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/residuals.R
\name{residuals}
\alias{residuals}
\alias{residuals.lmm}
\title{Extract The Residuals From a Multivariate Gaussian Model}
\usage{
\method{residuals}{lmm}(
  object,
  type.residual = "response",
  format = "long",
  data = NULL,
  p = NULL,
  type.object = "lmm",
  ...
)
}
\arguments{
\item{object}{a \code{lmm} object.}

\item{type.residual}{[character] Should the raw residuals be output (\code{"response"}), or the Pearson residuals (\code{"pearson"}),  or normalized residuals (\code{"normalized"} or \code{"tnormalized"}).}

\item{format}{[character] Should the residuals be output relative as a vector (\code{"long"}), or as a matrix with in row the clusters and in columns the outcomes (\code{"wide"}).}

\item{data}{[data.frame] dataset relative to which the residuals should be computed. Only relevant if differs from the dataset used to fit the model.}

\item{p}{[numeric vector] value of the model coefficients at which to evaluate the residuals. Only relevant if differs from the fitted values.}

\item{type.object}{[character] Set this argument to \code{"gls"} to obtain the output from the gls object and related methods.}

\item{...}{Not used. For compatibility with the generic method.}
}
\value{
When argument format is \code{"long"} and type.oobject is \code{"lmm"}, a vector containing the value of the residual realtive to each observation.
When argument format is \code{"wide"} and type.oobject is \code{"lmm"}, a data.frame with the value of the residual relative to each cluster (in rows) at each timepoint (in columns).
}
\description{
Extract or compute the residuals of a multivariate gaussian model.
}
\details{
\itemize{
\item \code{"raw"}: observed outcome minus fitted value.
\item \code{"pearson"}: each raw residual is divided by its modeled standard deviation.
\item \code{"normalized"}: raw residuals are multiplied, within clusters, by the inverse of the (lower) Cholesky factor.
\item \code{"tnormalized"}: raw residuals are multiplied, within clusters, by the inverse of the (upper) Cholesky factor.
}
}
\examples{
## simulate data in the long format
set.seed(10)
dL <- sampleRem(100, n.times = 3, format = "long")

## fit Multivariate Gaussian Model
eUN.lmm <- lmm(Y ~ X1 + X2 + X5, repetition = ~visit|id, structure = "UN", data = dL, df = FALSE)

## prediction
residuals(eUN.lmm, format = "wide")
residuals(eUN.lmm, format = "wide", type.residual = "normalized")
}
