% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ufit.R
\name{ufit}
\alias{ufit}
\title{Unique Fitted Values}
\usage{
ufit(object, value = NULL, confint = TRUE, conf.quantile = stats::qnorm(0.975))
}
\arguments{
\item{object}{a \code{lmm} or \code{gls} object}

\item{value}{[named numeric vector] values used to fix the continuous covariates.}

\item{confint}{[logical] should confidence intervals for the fitted values be computed?}

\item{conf.quantile}{[numeric 0-1] the quantile used to compute the confidence intervals.}
}
\description{
Compute all the possible fitted values among the possible combinaisons of categorical covariables.
Continuous covariates are set to a single value.
}
\examples{
library(ggplot2)
library(data.table)
library(nlme)

data(gastricbypassL, package = "repeated")
## generate covariates
gastricbypassL <- as.data.table(gastricbypassL)
gastricbypassL[, baselineG := .SD$glucagon[1]<10000, by = "id"]
gastricbypassL[, age := round(rnorm(1, mean = 50, sd = 10)), by = "id"]

## time evolution
e.lmm1 <- lmm(weight ~ time, covariance = ~visit|id, data = gastricbypassL)
e.ufit1 <- ufit(e.lmm1)
autoplot(e.ufit1)

e.gls2 <- gls(glucagon ~ time, correlation = corSymm(form=~as.numeric(visit)|id), weights = varIdent(form=~1|visit), data = gastricbypassL, na.action = na.exclude)
e.ufit2 <- ufit(e.gls2)
e.ufit2

e.gls3 <- gls(glucagon ~ time, correlation = corCompSymm(form=~1|id), data = gastricbypassL, na.action = na.exclude)
e.ufit3 <- ufit(e.gls3)
e.ufit3

## time per group
e.lmm2 <- lmm(weight ~ time*baselineG, covariance = ~visit|id, data = gastricbypassL)
e.ufit2 <- ufit(e.lmm2)
autoplot(e.ufit2) + theme(axis.text.x = element_text(angle = 90))
autoplot(e.ufit2, x = "visit")

## adding continuous covariates
e.lmm3 <- lmm(weight ~ time*baselineG + age, covariance = ~visit|id, data = gastricbypassL)
e.ufit45 <- ufit(e.lmm3, c("age" = 30))
e.ufit50 <- ufit(e.lmm3, c("age" = 60))
if(require(ggpubr)){
ggarrange(autoplot(e.ufit45, x = "visit") + coord_cartesian(ylim = c(80,150)),
          autoplot(e.ufit50, x = "visit") + coord_cartesian(ylim = c(80,150)),
          legend = "bottom")
}
}
